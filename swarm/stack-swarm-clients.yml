version: '3.8'
services:
    mongo-express:
        image: mongo-express
        build: 
            context: .
            dockerfile: ./mongo/Dockerfile
        environment:
            ME_CONFIG_BASICAUTH_USERNAME: root
            ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2022!
            ME_CONFIG_MONGODB_ADMINUSERNAME: root
            ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2022!
            ME_CONFIG_MONGODB_PORT: 27017
            ME_CONFIG_MONGODB_SERVER: mongo-dronedb
        container_name: mongo-express
        ports:
            - "8081:8081"
        networks:
            - broker-net
        restart: always
        depends_on:
            - mongo-dronedb
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == worker]
            restart_policy:
                condition: on-failure
                max_attempts: 3

    visualizer:
        image: dockersamples/visualizer:stable
        ports:
            - "8888:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager] 
            restart_policy:
                condition: on-failure
                max_attempts: 3

    kowl:
        image: quay.io/cloudhut/kowl:master
        restart: unless-stopped
        hostname: kowl
        ports:
            - 8100:8080
        volumes:
            - "./kowl_config.yaml:/etc/kowl/config.yaml"
        entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
        networks:
            - broker-net
        depends_on:
            - kafka
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager]
            restart_policy:
                condition: on-failure
                max_attempts: 3

# Networks to be created to facilitate communication between containers
networks:
    broker-net:
        name: broker-net
        external: true