# Consumer Properties
spring.kafka.bootstrap-servers=${HOST_KAFKA_DOCKER_INTERNAL:127.0.0.1}:29092

group.name.consumer=${KAFKA_GROUP:drone_group}
topic.name.consumer=${KAFKA_TOPIC:drone_topic}

# Common Kafka Properties
auto.create.topics.enable=true

# Mail Server
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${CONFIG_GMAIL_USERNAME:ricardosoareslacerda@gmail.com}
spring.mail.password=${CONFIG_GMAIL_APP_PASSWORD:bwzrltermsamneyy}

# Mail Server Connections Properties, ConnectTLS, port 587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.transport.protocol=smtp
spring.mail.debug=false

# Mail Sender Properties
mail.sender.fromAddress=${MAIL_ADDRESS_FROM:ricardosoareslacerda@gmail.com}
mail.sender.toAddresses=${MAIL_ADDRESS_TO:ricardosoareslacerda@gmail.com}
mail.sender.subject=Drone Alert Information - Drone Falling

# MongoDB
spring.data.mongodb.host=${MONGODB_HOST:127.0.0.1}
spring.data.mongodb.port=${MONGODB_PORT:27017}
spring.data.mongodb.authentication-database=${MONGODB_AUTH_DATABASE:admin}
spring.data.mongodb.database=${MONGODB_DATABASE:dronedb}
spring.data.mongodb.username=${MONGODB_USERNAME:root}
spring.data.mongodb.password=${MONGODB_PASSWORD:MongoDB2022!}

# Environment Variable DockerFile
# ENV -> HOST_KAFKA_DOCKER_INTERNAL=host.docker.internal
# host.docker.internal (host internal docker )
# 127.0.0.1 (host not compile in docker) (without docker)
# KAFKA_GROUP -> drone_group
# KAFKA_TOPIC -> drone_topic
# ${HOST_MONGO_DOCKER_INTERNAL:127.0.0.1}
# ${PORT_MONGO_DOCKER_INTERNAL:27017}