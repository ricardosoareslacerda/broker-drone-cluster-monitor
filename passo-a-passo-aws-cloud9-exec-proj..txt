Roteiro Vídeo
- logar na conta AWS - Cloud9

- IP Máquina Virtual - AWS
	- 3.90.42.23

- entrar na pasta cd config/cluster

- executar o comando 
	sh iniciar.sh
	
- executar o comando terminal node 1
	sh conectar.sh
		escolher 1
		
	copiar ip
	
- abrir outro terminal 
	sh conectar.sh
		escolher 2
		
	copiar ip

- abrir outro terminal 
	sh conectar.sh
		escolher 3
		
	copiar ip		
	
- terminal node 1 e executar
	
	docker swarm init
		copia token worker
		docker swarm join --token SWMTKN-1-2qkh477dzvaivs9oilf14wqma4vemhgq9t8j0grpo1ok1sr6kw-2few50kycnit6f5lh6gg21hpv 10.1.1.184:2377
	
	docker swarm join-token manager
		copia token manager
		docker swarm join --token SWMTKN-1-2qkh477dzvaivs9oilf14wqma4vemhgq9t8j0grpo1ok1sr6kw-5o8bnp1icy5ko1be3ia5yl2e2 10.1.1.184:2377
			
	docker network create -d overlay broker-net
	
	git clone https://github.com/ricardosoareslacerda/broker-drone-cluster-monitor.git
	
	docker stack deploy -c ./broker-drone-cluster-monitor/swarm/stack-swarm-services.yml drone-stack
	
	docker service ls
	
	docker stack ps drone-stack
	
	docker stack deploy -c ./broker-drone-cluster-monitor/swarm/stack-swarm-clients.yml drone-stack
	
	docker service ls
	
	docker stack ps drone-stack
	

- Verificar Acessos:
	NODE 1 IP: 34.238.154.126
	NODE 2 IP: 54.146.191.143
	NODE 3 IP: 107.22.70.227
	
	- Visualizer:
		- http://34.238.154.126:8888
	
	- Kowl:
		- http://34.238.154.126:8077
		
	- Swagger UI:
		- http://107.22.70.227:8082/api/v1/drones-monitor/swagger-ui/
		
		Drone20		
{
	"id": 20,
	"name": "Drone-20",
	"latitude": 1.5,
	"longitude": 1.5,
	"temperature": "50",
	"humidity": 0.80, 
	"rastreability": true
}
		
	- Mongo Express:
		- http://107.22.70.227:8081
			- root
			- MongoExpress2022!
			
	- Gmail:
		- https://mail.google.com/mail/u/0
		
	
- terminal node 3 e executar
	docker swarm join --token SWMTKN-1-2qkh477dzvaivs9oilf14wqma4vemhgq9t8j0grpo1ok1sr6kw-5o8bnp1icy5ko1be3ia5yl2e2 10.1.1.184:2377
	
	docker service ls
	
	docker stack ps drone-stack
	

- terminal node 2 e executar
		docker swarm join --token SWMTKN-1-2qkh477dzvaivs9oilf14wqma4vemhgq9t8j0grpo1ok1sr6kw-5o8bnp1icy5ko1be3ia5yl2e2 10.1.1.184:2377
	
	docker service ls
	
	docker stack ps drone-stack
	
	docker stack deploy -c ./broker-drone-cluster-monitor/swarm/stack-swarm-clients-jobs.yml drone-stack
	
	docker service ls
	
	docker stack ps drone-stack
	
- - Verificar Acessos:
	NODE 1 IP: 34.238.154.126
	NODE 2 IP: 54.146.191.143
	NODE 3 IP: 107.22.70.227
		
	- Swagger UI:
		- http://107.22.70.227:8082/api/v1/drones-monitor/swagger-ui/
		
		Drone20		
		{
			"id": 20,
			"name": "Drone-20",
			"latitude": 1.5,
			"longitude": 1.5,
			"temperature": "50",
			"humidity": 0.80, 
			"rastreability": true
		}
	
	- Visualizer:
		- http://34.238.154.126:8888
	
	- Kowl:
		- http://34.238.154.126:8077
		
	- Mongo Express:
		- http://107.22.70.227:8081
			- root
			- MongoExpress2022!
			
	- Gmail:
		- https://mail.google.com/mail/u/0
		
		
		

	
- para finalização executar 
	docker stack rm drone_stack
	
	docker volume rm drone_stack_zookeeper-data drone_stack_drone_zookeeper-txn-logs drone_stack_dronedb
	
	
	
	
	






	
- Job:
	- docker service logs drone_stack_drone-kafka-job
	
- Producer:
	- docker service logs drone_stack_drone-kafka-producer
	
- Consumer:
	- docker service logs drone_stack_drone-kafka-consumer	
	
- Kafka Manager:
	- http://18.207.236.38:9000
- Testar aplicação teste kafka
- adequação o projeto 
	- separar em arquivos de stacks
		- TESTAR EXPOR PORTAS
		- TESTAR COLOCAR DIRETAMENTE O IP DO NÓ
		- TESTAR COLOCAR O COMANDO
		- docker-compose-stack-kafka.yml
		- docker-compose-stack-kafka-services.yml
		- docker-compose-stack-services.yml
	
	docker stack deploy -c ./broker-drone-cluster-monitor/docker-compose-kafka-cluster.yml drone-cluster
	docker stack deploy -c ./broker-drone-cluster-monitor/docker-compose-kafka-broker.yml drone-cluster
	docker stack deploy -c ./broker-drone-cluster-monitor/docker-compose-kafka-broker-webui.yml drone-cluster
	docker stack deploy -c ./broker-drone-cluster-monitor/docker-compose-kafka-cluster.yml drone-cluster
	
	docker service logs drone-cluster_zookeeper1
	docker service logs drone-cluster_kafka
	docker service logs drone-cluster_kowl
	docker service logs drone-cluster_mongo_dronedb
	docker service logs drone-cluster_mongo_express	
	docker service logs drone-cluster_visualizer
	docker service logs drone-cluster_drone-kafka-producer
	docker service logs drone-cluster_drone-kafka-consumer
	docker service logs drone-cluster_drone-kafka-job